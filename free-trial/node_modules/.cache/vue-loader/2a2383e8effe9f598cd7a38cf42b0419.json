{"remainingRequest":"C:\\Users\\jung\\Desktop\\hyperledger-luniverstar-sample-master\\free-trial\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jung\\Desktop\\hyperledger-luniverstar-sample-master\\free-trial\\src\\components\\product.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jung\\Desktop\\hyperledger-luniverstar-sample-master\\free-trial\\src\\components\\product.vue","mtime":1621877016587},{"path":"C:\\Users\\jung\\Desktop\\hyperledger-luniverstar-sample-master\\free-trial\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jung\\Desktop\\hyperledger-luniverstar-sample-master\\free-trial\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jung\\Desktop\\hyperledger-luniverstar-sample-master\\free-trial\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jung\\Desktop\\hyperledger-luniverstar-sample-master\\free-trial\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Header from '@/components/header'\nimport {Config} from '../js/config'\nimport BigNumber from 'bignumber.js'\n\nexport default {\n  components: {\n    Header,\n  },\n  data () {\n    return {\n      products: [\n        {\n          buy: '구매하기',\n          disabled: false,\n          text: 'Front Attack 멤버들의 폴라로이드 사진과 친필싸인이 들어있는 상품입니다. 멤버는 랜덤으로 선정되며 코팅처리가 되어있어 튼튼합니다.',\n          thx: '',\n          price: '300'\n        },\n        {\n          buy: '구매하기',\n          disabled: false,\n          text: '공개되지않은 앨범 비하인드 컷 5장을 디지털 파일로 보내드립니다. 노트북, 패드, 휴대전화 등 배경화면으로도 사용하실 수 있도록 다양한 사이즈를 지원합니다.',\n          thx: '',\n          price: '700'\n        },\n        {\n          buy: '구매하기',\n          disabled: false,\n          text: '팬미팅 얼리버드 티켓 2장입니다. 좌석을 선택하실 수 있습니다. 당일 얼리버드 티켓을 제시하시면, 간단한 간식과 담요를 제공하고 있습니다.',\n          thx: '',\n          price: '1000'\n        },\n        {\n          buy: '구매하기',\n          disabled: false,\n          text: 'Bread N Jam 멤버들의 엽서와 티셔츠 그리고 직접 만든 D.I.Y 키링을 함께 드립니다!  키링은 선택하실 수 있으며 , 엽서와 티셔츠는 랜덤으로 제공됩니다.',\n          thx: '',\n          price: '1200'\n        }\n      ]\n    }\n  },\n  computed: {\n    walletAddress() {\n      return Config.walletAddress\n    },\n    mtSymbol() {\n      return Config.mt.symbol\n    },\n    stSymbol() {\n      return Config.st.symbol\n    },\n    apiKey() {\n      return Config.dapp.apiKey\n    },\n    txActionName() {\n      return Config.txActionName\n    },\n    userName() {\n      return Config.userName\n    }\n  },\n  mounted(){\n    this.load()\n  },\n  methods: {\n    load() { \n      for(let productId = 0; productId < 4; productId++){\n        this.axios.post(`http://localhost:8081/tx/v1.0/transactions/getOwner`,{\n          'from': this.walletAddress.user,\n          'inputs': {\n            '_index': productId\n          }\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${this.apiKey}`,\n          }, \n        })\n          .then((response) => {\n            if(BigNumber(response.data.balance) >= parseInt(this.products[productId].price)){\n              this.products[productId].buy='구매 완료';\n              this.products[productId].disabled='true';\n              this.products[productId].thx=\"구매가 확정되었습니다.\";\n            }\n          })\n          .catch(() => {\n          })\n      }\n    },\n    valid_check(productId){\n      if(this.products[productId].disabled) {\n        alert('이미 구매하셨습니다.')\n        return\n      }\n      this.axios.get(`http://localhost:8081/tx/v1.0/wallets/balance`, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n        },\n      })\n        .then((response) => {\n          if(response){\n            this.purchase(productId);\n          }\n          else{\n            alert('보유하신 RWT를 확인해주세요!')\n          }\n        })\n        .catch(() => {\n          alert('잔고 확인 실패')\n        })\n    },\n    purchase(productId){\n      this.axios.post(`http://localhost:8081/tx/v1.0/transactions/purchase`,{\n          'from': this.walletAddress.user,\n          'inputs' : {\n            'receiverAddress': this.walletAddress.pd,\n            'valueAmount': this.products[productId].price,\n          }\n        },\n      {\n        headers: {\n          'api-key': this.apiKey,\n        },\n      })\n        .then(() => {\n          this.axios.post(`http://localhost:8081/tx/v1.0/transactions/setOwner`,{\n              'from': this.walletAddress.user,\n              'inputs': {\n                '_index': productId,\n                '_name': this.userName\n              }\n          }, \n          {\n            headers: {\n              'Authorization': `Bearer ${this.apiKey}`,\n            },\n          })\n            .then(() => {\n              alert('구매에 성공하였습니다.')\n              this.products[productId].buy='구매 완료';\n              this.products[productId].disabled='true';\n              this.axios.post(`http://localhost:8081/tx/v1.0/transactions/getOwner`,{\n                'from': this.walletAddress.user,\n                'inputs': {\n                  '_index': productId\n                }\n              },\n              {\n               headers: {\n                  'Authorization': `Bearer ${this.apiKey}`,\n                },\n              })\n                .then((response) => {\n                    if(BigNumber(response.data.balance) >= parseInt(this.products[productId].price)){\n                      this.products[productId].thx=\"구매가 확정되었습니다.\";\n                    }\n                })\n                .catch(() => {\n                  alert('구매 내역 불러오기에 실패했습니다. getOwner 함수를 확인해주세요.')\n                })\n            })\n            .catch(() => {\n              alert('구매 확정에 실패했습니다. 구매 확정을 위해, setOwner 함수를 확인해주세요.')\n            });\n        })\n        .catch(() => {\n          alert('구매에 실패하였습니다. purchase 함수를 확인해주세요.')\n        });\n      \n    }\n  }\n}\n",{"version":3,"sources":["product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"product.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container px-3 my-4\">\n    <Header/>\n    <section class=\"site-home-scene scene-cases\">\n      <div class=\"inner-container\">\n        <h2 class=\"shc-title\">Products</h2>\n        <p class=\"shc-sub-title\">상품 구매하기</p>\n        <p class=\"shc-descriptions\">획득한 RWT으로 원하는 상품을 구매해보세요!</p>\n      </div>\n\n      <div  class=\"shop-list-row row\">\n        <img src=\"@/assets/img2/product/Product1.png\" alt class=\"photo6 col-md-3 col-xl-2 text-center p-4 pr-md-0\">\n        <div class=\"col-md-6 col-xl-7 py-md-4 px-4 pb-2\">\n          <div class=\"d-flex justify-content-start mb-1\">\n            <h5 class=\"flex-shrink-1 m-0\"> Front Attack 멤버들의친필 사인 폴라로이드 세트</h5>\n          </div>\n          <div style=\"margin-top: 20px;\"><span class=\"t_dgray\">{{products[0].text}}</span></div>\n          <div style=\"margin-top: 10px;\"><span class=\"t_dgray\">{{products[0].thx}}</span></div>\n        </div>\n        <div class=\"d-flex col-md-3 col-xl-3 flex-md-column flex-wrap justify-content-md-center align-items-center pt-md-4 pb-4\">\n          <div class=\"text-big m-2\" :class=\"{disabled: products[0].disabled}\"><strong>{{products[0].price}} RWT</strong></div>\n          <button class=\"button-normal\" v-on:click=\"valid_check(0)\" v-bind:class=\"{disabled: products[0].disabled}\">{{products[0].buy}}</button>\n        </div>\n      </div>\n\n      <div class=\"shop-list-row row\">\n        <img src=\"@/assets/img2/product/Product2.jpg\" alt class=\"photo6 d-block col-md-3 col-xl-2 text-center p-4 pr-md-0\">\n        <div class=\"shop-list-content col-md-6 col-xl-7 py-md-4 px-4 pb-2\">\n          <div class=\"d-flex justify-content-start mb-1\">\n            <h5 class=\"flex-shrink-1 m-0\"> LuniBaaS 앨범 준비 과정 미공개 이미지 파일 세트 (Digital)</h5>\n          </div>\n          <div style=\"margin-top: 20px;\"><span class=\"t_dgray\">{{products[1].text}}</span></div>\n          <div style=\"margin-top: 10px;\"><span class=\"t_dgray\">{{products[1].thx}}</span></div>\n        </div>\n        <div class=\"d-flex col-md-3 col-xl-3 flex-md-column flex-wrap justify-content-md-center align-items-center px-3 px-md-0 pt-md-4 pb-4\">\n          <div class=\"text-big m-2\" :class=\"{disabled: products[1].disabled}\"><strong>{{products[1].price}} RWT</strong></div>\n          <button class=\"button-normal\" v-on:click=\"valid_check(1)\" v-bind:class=\"{disabled: products[1].disabled}\">{{products[1].buy}}</button>\n        </div>\n      </div>\n      \n      <div class=\"shop-list-row row\">\n        <img src=\"@/assets/img2/product/Product3.png\" alt class=\"photo6 d-block col-md-3 col-xl-2 text-center p-4 pr-md-0\">\n        <div class=\"shop-list-content col-md-6 col-xl-7 py-md-4 px-4 pb-2\">\n          <div class=\"d-flex justify-content-start mb-1\">\n            <h5 class=\"flex-shrink-1 m-0\" > ‘Intern net’ 팬미팅 티켓 얼리버드 (2장)</h5>\n          </div>\n          <div style=\"margin-top: 20px;\"><span class=\"t_dgray\">{{products[2].text}}</span></div>\n          <div style=\"margin-top: 10px;\"><span class=\"t_dgray\">{{products[2].thx}}</span></div>\n        </div>\n        <div class=\"d-flex col-md-3 col-xl-3 flex-md-column flex-wrap justify-content-md-center align-items-center px-3 px-md-0 pt-md-4 pb-4\">\n          <div class=\"text-big m-2\" :class=\"{disabled: products[2].disabled}\"><strong>{{products[2].price}} RWT</strong></div>\n          <button class=\"button-normal\" v-on:click=\"valid_check(2)\" v-bind:class=\"{disabled: products[2].disabled}\">{{products[2].buy}}</button>\n        </div>\n      </div>\n\n      <div class=\"shop-list-row row\">\n        <img src=\"@/assets/img2/product/Product4.png\" alt class=\"photo6 d-block col-md-3 col-xl-2 text-center p-4 pr-md-0\">\n        <div class=\"shop-list-content col-md-6 col-xl-7 py-md-4 px-4 pb-2\">\n          <div class=\"d-flex justify-content-start mb-1\">\n            <h5 class=\"flex-shrink-1 m-0\" > ‘Bread N Jam’ 한정판 굿즈 세트 ( 엽서 + 키링 + 티셔츠 )</h5>\n          </div>\n          <div style=\"margin-top: 20px;\"><span class=\"t_dgray\">{{products[3].text}}</span></div>\n          <div style=\"margin-top: 10px;\"><span class=\"t_dgray\">{{products[3].thx}}</span></div>\n        </div>\n        <div class=\"d-flex col-md-3 col-xl-3 flex-md-column flex-wrap justify-content-md-center align-items-center px-3 px-md-0 pt-md-4 pb-4\">\n          <div class=\"text-big m-2\" :class=\"{disabled: products[3].disabled}\"><strong>{{products[3].price}} RWT</strong></div>\n          <button class=\"button-normal\" v-on:click=\"valid_check(3)\" v-bind:class=\"{disabled: products[3].disabled}\">{{products[3].buy}}</button>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport Header from '@/components/header'\nimport {Config} from '../js/config'\nimport BigNumber from 'bignumber.js'\n\nexport default {\n  components: {\n    Header,\n  },\n  data () {\n    return {\n      products: [\n        {\n          buy: '구매하기',\n          disabled: false,\n          text: 'Front Attack 멤버들의 폴라로이드 사진과 친필싸인이 들어있는 상품입니다. 멤버는 랜덤으로 선정되며 코팅처리가 되어있어 튼튼합니다.',\n          thx: '',\n          price: '300'\n        },\n        {\n          buy: '구매하기',\n          disabled: false,\n          text: '공개되지않은 앨범 비하인드 컷 5장을 디지털 파일로 보내드립니다. 노트북, 패드, 휴대전화 등 배경화면으로도 사용하실 수 있도록 다양한 사이즈를 지원합니다.',\n          thx: '',\n          price: '700'\n        },\n        {\n          buy: '구매하기',\n          disabled: false,\n          text: '팬미팅 얼리버드 티켓 2장입니다. 좌석을 선택하실 수 있습니다. 당일 얼리버드 티켓을 제시하시면, 간단한 간식과 담요를 제공하고 있습니다.',\n          thx: '',\n          price: '1000'\n        },\n        {\n          buy: '구매하기',\n          disabled: false,\n          text: 'Bread N Jam 멤버들의 엽서와 티셔츠 그리고 직접 만든 D.I.Y 키링을 함께 드립니다!  키링은 선택하실 수 있으며 , 엽서와 티셔츠는 랜덤으로 제공됩니다.',\n          thx: '',\n          price: '1200'\n        }\n      ]\n    }\n  },\n  computed: {\n    walletAddress() {\n      return Config.walletAddress\n    },\n    mtSymbol() {\n      return Config.mt.symbol\n    },\n    stSymbol() {\n      return Config.st.symbol\n    },\n    apiKey() {\n      return Config.dapp.apiKey\n    },\n    txActionName() {\n      return Config.txActionName\n    },\n    userName() {\n      return Config.userName\n    }\n  },\n  mounted(){\n    this.load()\n  },\n  methods: {\n    load() { \n      for(let productId = 0; productId < 4; productId++){\n        this.axios.post(`http://localhost:8081/tx/v1.0/transactions/getOwner`,{\n          'from': this.walletAddress.user,\n          'inputs': {\n            '_index': productId\n          }\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${this.apiKey}`,\n          }, \n        })\n          .then((response) => {\n            if(BigNumber(response.data.balance) >= parseInt(this.products[productId].price)){\n              this.products[productId].buy='구매 완료';\n              this.products[productId].disabled='true';\n              this.products[productId].thx=\"구매가 확정되었습니다.\";\n            }\n          })\n          .catch(() => {\n          })\n      }\n    },\n    valid_check(productId){\n      if(this.products[productId].disabled) {\n        alert('이미 구매하셨습니다.')\n        return\n      }\n      this.axios.get(`http://localhost:8081/tx/v1.0/wallets/balance`, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n        },\n      })\n        .then((response) => {\n          if(response){\n            this.purchase(productId);\n          }\n          else{\n            alert('보유하신 RWT를 확인해주세요!')\n          }\n        })\n        .catch(() => {\n          alert('잔고 확인 실패')\n        })\n    },\n    purchase(productId){\n      this.axios.post(`http://localhost:8081/tx/v1.0/transactions/purchase`,{\n          'from': this.walletAddress.user,\n          'inputs' : {\n            'receiverAddress': this.walletAddress.pd,\n            'valueAmount': this.products[productId].price,\n          }\n        },\n      {\n        headers: {\n          'api-key': this.apiKey,\n        },\n      })\n        .then(() => {\n          this.axios.post(`http://localhost:8081/tx/v1.0/transactions/setOwner`,{\n              'from': this.walletAddress.user,\n              'inputs': {\n                '_index': productId,\n                '_name': this.userName\n              }\n          }, \n          {\n            headers: {\n              'Authorization': `Bearer ${this.apiKey}`,\n            },\n          })\n            .then(() => {\n              alert('구매에 성공하였습니다.')\n              this.products[productId].buy='구매 완료';\n              this.products[productId].disabled='true';\n              this.axios.post(`http://localhost:8081/tx/v1.0/transactions/getOwner`,{\n                'from': this.walletAddress.user,\n                'inputs': {\n                  '_index': productId\n                }\n              },\n              {\n               headers: {\n                  'Authorization': `Bearer ${this.apiKey}`,\n                },\n              })\n                .then((response) => {\n                    if(BigNumber(response.data.balance) >= parseInt(this.products[productId].price)){\n                      this.products[productId].thx=\"구매가 확정되었습니다.\";\n                    }\n                })\n                .catch(() => {\n                  alert('구매 내역 불러오기에 실패했습니다. getOwner 함수를 확인해주세요.')\n                })\n            })\n            .catch(() => {\n              alert('구매 확정에 실패했습니다. 구매 확정을 위해, setOwner 함수를 확인해주세요.')\n            });\n        })\n        .catch(() => {\n          alert('구매에 실패하였습니다. purchase 함수를 확인해주세요.')\n        });\n      \n    }\n  }\n}\n</script>\n\n<style scoped>\n  .portfolio-image {\n    background-image: url('../assets/img2/detail/1.jpg');\n  }\n  .inner-container{\n    padding-top: 80px !important;\n  }\n</style>\n"]}]}